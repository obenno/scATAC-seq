// Global default params, used in configs
// config file was altered based on https://github.com/nf-core/rnaseq/blob/master/nextflow.config
manifest.version = "v0.0.5"
params {
    platform = "TB" // or "10X"
    input = null
    species = null
    bc_read = "fastq_1"
    trimOpt = '-a TCACTGGCCTGCGCTCCACGCNNNNNNAGATGTGTATAAGAGACAG...CTGTCTCTTATACACATCTCCGAGCCCACGAGAC -A GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG...CTGTCTCTTATACACATCTNNNNNNGCGTGGAGCGCAGGCCAGTGA'
    trim_mLen = 25
    bwaIndex = null
    genomeGTF = null

    // genome size used by macs2, default for human genome
    refGenome = "hg38"

    // sinto fragment generation options
    chrPattern = '(?i)^chr' // sinto needs to define chr pattern, modify this when reference genome is not hg38 and mm10
    barcode_regex = null
    barcodetag = "CB"
    chunksize = 500000
    max_distance = 5000
    min_distance = 10

    // use null for human and mouse whole genome sample
    // genomeSize will be detected automatically in rmd report
    // overwrite this when use partial genome as reference
    genomeSize = null
    // options for other genomes
    // genomeSize = "1.8e9" // mouse
    // genomeSize = "9e7" // C. elegans
    // genomeSize = "1.2e8" // fruitfly
    minCell = 10 // feature obeseved in at least "minCell" cells, filter used when creating signac object
    minFeature = 200 // cells with at least "minFeature" features, filter used when creating signac object
    nCountMin = 0 // removed default cutoff, use ostu's threshold instead
    nCountMax = 20000 // max nCount_peaks in rmd
    emptyDrops_fdr = 0.001 // EmptyDrops FDR threshold
    // no naive filter applied, comment out
    //FRiP_cutoff = 0.15
    //blacklist_fraction_cutoff = 0.05
    //nucleosome_signal_cutoff = 4
    //TSS_enrichment_cutoff = 3 // signac defaults
    blackList = null

    mito_chr_label = "chrM"
    // whitelist file
    whitelist = null

    // pipeline global
    outdir = './results'
    publish_dir_mode = 'copy'
    tracedir = "${params.outdir}/pipeline_info"

    // conda setting
    enable_conda = false
    // running resource
    max_memory = '40.GB'
    max_cpus = 16
    max_time = '240.h'
}

// process resource
process {
    cpus   = 10
    memory = 40.GB
    time   = 120.h

    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries    = 0
    maxErrors     = '-1'
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}

profiles {
    conda {
        conda.enabled = true
    }

    docker {
        docker.enabled = true
        docker.userEmulation = true
        docker.runOptions = '-u $(id -u):$(id -g) --init'
    }
}
